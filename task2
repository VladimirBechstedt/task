'''Один из вариантов - использование функциональной парадигмы. 
Эта парадигма включает в себя работу с функциями как с первоклассными объектами, 
а также имеет возможности для работы с коллекциями данных и применения стандартных функций. 
Использование функциональной парадигмы для этой задачи позволит более компактно и лаконично 
описать создание таблицы умножения и вывод результатов.'''

def print_multiplication_table(n: int) -> None:
    # Создаем список всех чисел от 1 до 9
    numbers = list(range(1, 10))

    # Применяем функцию умножения к каждой паре чисел,
    # а затем выводим результат умножения
    for i in range(1, n + 1):
        results = list(map(lambda j: f"{i} * {j} = {i * j}", numbers))
        print("\n".join(results))
        print()


n = int(input("Введите число n: "))
print_multiplication_table(n)
